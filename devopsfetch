#!/bin/bash

# Function to display help
display_help() {
    echo "Usage: devopsfetch [OPTION]"
    echo "Retrieve and display system information for DevOps purposes."
    echo
    echo "Options:"
    echo "  -p, --port [PORT]    Display active ports or specific port info"
    echo "  -d, --docker [NAME]  List Docker images/containers or specific container info"
    echo "  -n, --nginx [DOMAIN] Display Nginx domains or specific domain config"
    echo "  -u, --users [USER]   List users and last login or specific user info"
    echo "  -t, --time RANGE     Display activities within a time range (e.g., '1 hour ago')"
    echo "  -h, --help           Display this help message"
}

# Function to display ports
display_ports() {
    if [ -z "$1" ]; then
        ss -tuln | column -t
    else
        ss -tuln | grep ":$1 " | column -t
    fi
}

# Function to display Docker info
display_docker() {
    if [ -z "$1" ]; then
        docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Image}}\t{{.ID}}"
    else
        docker inspect "$1" | jq '.[0] | {Name: .Name, State: .State.Status, Image: .Config.Image, ID: .Id}'
    fi
}

# Function to display Nginx info
display_nginx() {
    if [ -z "$1" ]; then
        grep -R server_name /etc/nginx/sites-enabled/ | awk '{print $2 " " $3}' | sed 's/;//' | column -t
    else
        grep -R -A 10 "server_name $1" /etc/nginx/sites-enabled/
    fi
}

# Function to display user info
display_users() {
    if [ -z "$1" ]; then
        last | head -n 10 | column -t
    else
        last "$1" | head -n 5 | column -t
    fi
}

# Function to display time range info
display_time_range() {
    if [ -z "$1" ]; then
        echo "Please specify a time range (e.g., '1 hour ago')"
    else
        journalctl --since "$1" | tail -n 20
    fi
}

# Main logic
case "$1" in
    -p|--port)
        display_ports "$2"
        ;;
    -d|--docker)
        display_docker "$2"
        ;;
    -n|--nginx)
        display_nginx "$2"
        ;;
    -u|--users)
        display_users "$2"
        ;;
    -t|--time)
        display_time_range "$2"
        ;;
    -h|--help)
        display_help
        ;;
    *)
        echo "Invalid option. Use -h or --help for usage information."
        exit 1
        ;;
esac